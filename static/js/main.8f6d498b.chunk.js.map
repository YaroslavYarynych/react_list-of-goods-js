{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT__ALPHABETICALLY","SORT__BY__LENGTH","App","useState","sortType","setsortType","isReversed","setIsReversed","preparedGoods","goods","copyGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","resetCondition","className","type","cn","onClick","map","good","uuidv4","ReactDOM","render","document","getElementById"],"mappings":"yPAOaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAuB,WACvBC,EAAmB,SAoBZC,EAAM,WACjB,MAAgCC,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAtBiB,SAACC,EAAOL,EAAUE,GACzC,IAAMI,EAAS,YAAOD,GAEtB,GAAIL,EACF,OAAQA,GACN,KAAKJ,EACHU,EAAUC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACrD,MACF,KAAKZ,EACHS,EAAUC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UACtD,MAEF,QAAS,OAAO,EAIpB,OAAOT,EAAaI,EAAUM,UAAYN,EAMpBO,CACpBlB,EAAiBK,EAAUE,GAQvBY,EAA+B,OAAbd,GAAoC,YAAfE,EAE7C,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYjB,IAAaJ,IAG7BsB,QAAS,kBAAMjB,EAAYL,IAR7B,iCAaA,wBACEoB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYjB,IAAaH,IAE7BqB,QAAS,kBAAMjB,EAAYJ,IAP7B,4BAYA,wBACEmB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAaf,IAEjBgB,QAAS,kBACPf,EAAeD,EAAyB,GAAZ,YARhC,qBAcCY,GACC,wBACEE,KAAK,SACLD,UAAWE,IACT,SACA,CAAE,qBAAsBjB,GAAYE,IAEtCgB,QAxDU,WAClBjB,EAAY,MACZE,EAAc,KAgDR,sBAaJ,6BACGC,EAAce,KAAI,SAAAC,GAAI,OACrB,oBAEE,UAAQ,OAFV,SAIGA,GAHIC,wBC/GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8f6d498b.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid'; // eslint-disable-line\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT__ALPHABETICALLY = 'alphabet';\nconst SORT__BY__LENGTH = 'length';\nconst getPreparedGoods = (goods, sortType, isReversed) => {\n  const copyGoods = [...goods];\n\n  if (sortType) {\n    switch (sortType) {\n      case SORT__ALPHABETICALLY:\n        copyGoods.sort((good1, good2) => good1.localeCompare(good2));\n        break;\n      case SORT__BY__LENGTH:\n        copyGoods.sort((good1, good2) => good1.length - good2.length);\n        break;\n\n      default: return 0;\n    }\n  }\n\n  return isReversed ? copyGoods.reverse() : copyGoods;\n};\n\nexport const App = () => {\n  const [sortType, setsortType] = useState(null);\n  const [isReversed, setIsReversed] = useState('');\n  const preparedGoods = getPreparedGoods(\n    goodsFromServer, sortType, isReversed,\n  );\n\n  const handleReset = () => {\n    setsortType(null);\n    setIsReversed('');\n  };\n\n  const resetCondition = (sortType !== null || isReversed === 'reverse');\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== SORT__ALPHABETICALLY },\n          )\n          }\n          onClick={() => setsortType(SORT__ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== SORT__BY__LENGTH },\n          )}\n          onClick={() => setsortType(SORT__BY__LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => (\n            setIsReversed(!isReversed ? 'reverse' : '')\n          )}\n        >\n          Reverse\n        </button>\n\n        {resetCondition && (\n          <button\n            type=\"button\"\n            className={cn(\n              'button',\n              { 'is-danger is-light': sortType || isReversed },\n            )}\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {preparedGoods.map(good => (\n          <li\n            key={uuidv4()}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}