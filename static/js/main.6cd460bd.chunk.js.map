{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT__ALPHABETICALLY","SORT__BY__LENGTH","App","useState","visibleGoods","setVisibleGoods","reversed","setReversed","preparedGoods","goods","copyGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","cn","onClick","map","good","uuidv4","ReactDOM","render","document","getElementById"],"mappings":"2PAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAuB,WACvBC,EAAmB,SA0BZC,EAAM,WACjB,MAAwCC,mBAAS,MAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EA7BiB,SAACC,EAAOL,EAAcE,GAC7C,IAAMI,EAAS,YAAOD,GAYtB,OAVIL,GACFM,EAAUC,MAAK,SAACC,EAAOC,GACrB,OAAQT,GACN,KAAKJ,EAAsB,OAAOY,EAAME,cAAcD,GACtD,QAAS,OAAO,EAChB,KAAKZ,EAAkB,OAAOW,EAAMG,OAASF,EAAME,WAKrDT,GAEK,YADCA,EAEGI,EAAUM,UAMhBN,EAOeO,CACpBlB,EAAiBK,EAAcE,GAGjC,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYhB,IAAiBJ,IAGjCqB,QAAS,kBAAMhB,EAAgBL,IARjC,iCAaA,wBACEmB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYhB,IAAiBH,IAEjCoB,QAAS,kBAAMhB,EAAgBJ,IAPjC,4BAYA,wBACEkB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAad,IAEjBe,QAAS,kBAGHd,GAFHD,GACe,YATpB,sBAgBmB,OAAjBF,GAAsC,YAAbE,IACzB,wBACEa,KAAK,SACLD,UAAWE,IACT,SACA,CAAE,YAAahB,GAAgBE,IAEjCe,QAAS,WACPhB,EAAgB,MAChBE,EAAY,KARhB,sBAgBJ,6BACGC,EAAcc,KAAI,SAAAC,GAAI,OACrB,oBACE,UAAQ,OADV,SAIGA,GAFIC,wBCpHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6cd460bd.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useState } from 'react';\nimport cn from 'classnames';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT__ALPHABETICALLY = 'alphabet';\nconst SORT__BY__LENGTH = 'length';\nconst getPreparedGoods = (goods, visibleGoods, reversed) => {\n  const copyGoods = [...goods];\n\n  if (visibleGoods) {\n    copyGoods.sort((good1, good2) => {\n      switch (visibleGoods) {\n        case SORT__ALPHABETICALLY: return good1.localeCompare(good2);\n        default: return 0;\n        case SORT__BY__LENGTH: return good1.length - good2.length;\n      }\n    });\n  }\n\n  if (reversed) {\n    switch (reversed) {\n      case 'reverse':\n        return copyGoods.reverse();\n\n      default: return copyGoods;\n    }\n  }\n\n  return copyGoods;\n};\n\nexport const App = () => {\n  const [visibleGoods, setVisibleGoods] = useState(null);\n  const [reversed, setReversed] = useState(false);\n\n  const preparedGoods = getPreparedGoods(\n    goodsFromServer, visibleGoods, reversed,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': visibleGoods !== SORT__ALPHABETICALLY },\n          )\n          }\n          onClick={() => setVisibleGoods(SORT__ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': visibleGoods !== SORT__BY__LENGTH },\n          )}\n          onClick={() => setVisibleGoods(SORT__BY__LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !reversed },\n          )}\n          onClick={() => (\n            !reversed\n              ? setReversed('reverse')\n              : setReversed(false)\n          )}\n        >\n          Reverse\n        </button>\n\n        {(visibleGoods !== null || reversed === 'reverse') && (\n          <button\n            type=\"button\"\n            className={cn(\n              'button',\n              { 'is-danger': visibleGoods || reversed },\n            )}\n            onClick={() => {\n              setVisibleGoods(null);\n              setReversed('');\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {preparedGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={uuidv4()}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}